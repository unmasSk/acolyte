from typing import Dict, List, Any, Optional
from acolyte.core.secure_config import Settings

class CollectionManager:
    config: Settings
    weaviate_url: str
    client: Optional[Any]  # weaviate.Client
    _schemas: Optional[Dict[str, Any]]

    def __init__(self, weaviate_url: Optional[str] = ...) -> None: ...
    def connect(self) -> None: ...
    def disconnect(self) -> None: ...
    @property
    def schemas(self) -> Dict[str, Any]: ...
    def create_all_collections(self) -> int: ...
    def collection_exists(self, name: str) -> bool: ...
    def _create_collection(self, collection_def: Dict[str, Any]) -> None: ...
    def get_collection_info(self, name: str) -> Optional[Dict[str, Any]]: ...
    def _get_object_count(self, collection_name: str) -> int: ...
    def get_all_collections(self) -> List[str]: ...
    def get_statistics(self) -> Dict[str, Any]: ...
    def health_check(self) -> Dict[str, Any]: ...

def get_collection_manager(weaviate_url: Optional[str] = ...) -> CollectionManager: ...
