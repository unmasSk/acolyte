"""
Language configuration for chunking.
Centralizes all language detection patterns and mappings.
"""

LANGUAGE_CONFIG = {
    'extensions': {
        # Python
        '.py': 'python',
        '.pyw': 'python',
        '.pyi': 'python',
        # JavaScript
        '.js': 'javascript',
        '.mjs': 'javascript',
        '.cjs': 'javascript',
        '.jsx': 'javascript',
        # TypeScript
        '.ts': 'typescript',
        '.tsx': 'typescript',
        '.mts': 'typescript',
        '.cts': 'typescript',
        '.d.ts': 'typescript',
        # Java
        '.java': 'java',
        # Go
        '.go': 'go',
        # Rust
        '.rs': 'rust',
        # C/C++
        '.c': 'c',
        '.h': 'c',
        '.cpp': 'cpp',
        '.cxx': 'cpp',
        '.cc': 'cpp',
        '.hpp': 'cpp',
        '.hxx': 'cpp',
        # C#
        '.cs': 'csharp',
        '.csproj': 'xml',
        '.vbproj': 'xml',
        '.fsproj': 'xml',
        '.sln': 'ini',
        # Ruby
        '.rb': 'ruby',
        '.rake': 'ruby',
        # PHP
        '.php': 'php',
        '.phtml': 'php',
        # Swift
        '.swift': 'swift',
        # Kotlin
        '.kt': 'kotlin',
        '.kts': 'kotlin',
        # Markdown
        '.md': 'markdown',
        '.markdown': 'markdown',
        '.mdx': 'markdown',
        # Config files
        '.json': 'json',
        '.yaml': 'yaml',
        '.yml': 'yaml',
        '.toml': 'toml',
        '.ini': 'ini',
        '.cfg': 'ini',
        '.conf': 'config',
        '.properties': 'ini',
        '.env': 'ini',
        # Web
        '.html': 'html',
        '.htm': 'html',
        '.xml': 'xml',
        '.css': 'css',
        '.scss': 'scss',
        '.sass': 'sass',
        '.less': 'less',
        # Shell
        '.sh': 'shell',
        '.bash': 'shell',
        '.zsh': 'shell',
        '.fish': 'shell',
        # Others
        '.sql': 'sql',
        '.r': 'r',
        '.R': 'r',
        '.lua': 'lua',
        '.vim': 'vimscript',
        '.el': 'elisp',
    },
    'shebang_patterns': {
        r'#!.*python': 'python',
        r'#!.*node': 'javascript',
        r'#!.*ruby': 'ruby',
        r'#!.*perl': 'perl',
        r'#!.*bash': 'bash',
        r'#!.*sh': 'bash',
    },
    'special_files': {
        # Build files
        'dockerfile': 'dockerfile',
        'makefile': 'makefile',
        'rakefile': 'ruby',
        'gemfile': 'ruby',
        'gemfile.lock': 'ruby',
        'pipfile': 'toml',
        'cargo.toml': 'toml',
        'cargo.lock': 'toml',
        'go.mod': 'go',
        'go.sum': 'go',
        'pom.xml': 'xml',
        'build.gradle': 'groovy',
        'settings.gradle': 'groovy',
        'build.gradle.kts': 'kotlin',
        'settings.gradle.kts': 'kotlin',
        # Package files
        'package.json': 'json',
        'package-lock.json': 'json',
        'yarn.lock': 'json',
        'pnpm-lock.yaml': 'yaml',
        'composer.json': 'json',
        'composer.lock': 'json',
        # Config files
        'tsconfig.json': 'json',
        'angular.json': 'json',
        'jest.config.js': 'javascript',
        'webpack.config.js': 'javascript',
        'rollup.config.js': 'javascript',
        'vite.config.js': 'javascript',
        'babel.config.js': 'javascript',
        'next.config.js': 'javascript',
        'nuxt.config.js': 'javascript',
        'vue.config.js': 'javascript',
        'svelte.config.js': 'javascript',
        # Python configs
        'setup.py': 'python',
        'setup.cfg': 'python',
        'requirements.txt': 'ini',
        'requirements-dev.txt': 'ini',
        'requirements.in': 'ini',
        'constraints.txt': 'ini',
        'tox.ini': 'ini',
        'pytest.ini': 'ini',
        '.coveragerc': 'ini',
        '.flake8': 'ini',
        '.mypy.ini': 'ini',
        '.pylintrc': 'ini',
        # Ruby configs
        '.rspec': 'yaml',
        '.rubocop.yml': 'yaml',
        'config.ru': 'ruby',
        # Docker/K8s
        'docker-compose.yml': 'yaml',
        'docker-compose.yaml': 'yaml',
        # Linter configs
        '.eslintrc': 'json',
        '.prettierrc': 'json',
        '.babelrc': 'json',
        '.stylelintrc': 'json',
        '.eslintrc.json': 'json',
        '.prettierrc.json': 'json',
        '.babelrc.json': 'json',
        'jsconfig.json': 'json',
        '.eslintrc.yml': 'yaml',
        '.prettierrc.yml': 'yaml',
        '.stylelintrc.yml': 'yaml',
        '.golangci.yml': 'yaml',
        '.golangci.yaml': 'yaml',
        # Others
        'phpunit.xml': 'xml',
        'phpunit.xml.dist': 'xml',
        'artisan': 'php',
        'podfile': 'ruby',
        'podfile.lock': 'ruby',
        'package.swift': 'swift',
        '.rustfmt.toml': 'toml',
        'clippy.toml': 'toml',
        'rust-toolchain': 'toml',
        'rust-toolchain.toml': 'toml',
        'global.json': 'json',
        'appsettings.json': 'json',
        'nuget.config': 'xml',
        'manifest.json': 'json',
        'manifest.mf': 'ini',
        'chrome.manifest': 'ini',
        '.editorconfig': 'ini',
        '.gitattributes': 'ini',
        '.npmrc': 'ini',
        '.nvmrc': 'ini',
        '.yarnrc': 'ini',
        '.gemrc': 'ini',
        '.ruby-version': 'ini',
        '.node-version': 'ini',
        '.python-version': 'ini',
        '.tool-versions': 'ini',
        'cmakelists.txt': 'cmake',
        'gradlew': 'shell',
        'mvnw': 'shell',
        'gradlew.bat': 'shell',
        'mvnw.bat': 'shell',
        # Environment files
        '.env': 'ini',
        '.env.local': 'ini',
        '.env.development': 'ini',
        '.env.production': 'ini',
        '.env.test': 'ini',
    },
    'content_patterns': {
        'python': [r'^\s*def\s+\w+\s*\(', r'^\s*class\s+\w+', r'^\s*import\s+\w+'],
        'javascript': [r'^\s*function\s+\w+\s*\(', r'^\s*const\s+\w+\s*=', r'^\s*var\s+\w+\s*='],
        'java': [
            r'^\s*public\s+class\s+',
            r'^\s*private\s+\w+\s+\w+\s*\(',
            r'^\s*import\s+\w+\.\w+',
        ],
        'go': [r'^\s*func\s+\w+\s*\(', r'^\s*package\s+\w+', r'^\s*type\s+\w+\s+struct'],
        'rust': [r'^\s*fn\s+\w+\s*\(', r'^\s*impl\s+\w+', r'^\s*use\s+\w+'],
        'c': [r'^\s*#include\s*<', r'^\s*int\s+main\s*\(', r'^\s*void\s+\w+\s*\('],
        'cpp': [r'^\s*#include\s*<', r'^\s*class\s+\w+', r'^\s*namespace\s+\w+'],
        'csharp': [r'^\s*using\s+\w+;', r'^\s*namespace\s+\w+', r'^\s*public\s+class\s+'],
        'ruby': [r'^\s*def\s+\w+', r'^\s*class\s+\w+', r'^\s*module\s+\w+'],
        'php': [r'^\s*<\?php', r'^\s*function\s+\w+\s*\(', r'^\s*class\s+\w+'],
        'swift': [r'^\s*func\s+\w+\s*\(', r'^\s*class\s+\w+', r'^\s*import\s+\w+'],
        'kotlin': [r'^\s*fun\s+\w+\s*\(', r'^\s*class\s+\w+', r'^\s*package\s+\w+'],
    },
}
