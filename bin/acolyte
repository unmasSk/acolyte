#!/bin/bash
# ACOLYTE executable wrapper
# 
# This file is the master executable for Linux/Mac systems.
# It gets copied to ~/.local/bin/acolyte during installation by install.sh
# 
# DO NOT MODIFY the copy in ~/.local/bin - modify this source file instead
# 
# Features:
# - Python version checking (3.11+)
# - Development mode support via ACOLYTE_DEV
# - Proper error messages and installation guidance
# - Tries installed entry point first, falls back to source

set -e  # Exit on error

# Determine ACOLYTE home directory
if [ -n "$ACOLYTE_DEV" ]; then
    # Development mode
    ACOLYTE_HOME="$ACOLYTE_DEV"
    DEVELOPMENT_MODE=1
else
    # Production mode
    ACOLYTE_HOME="${ACOLYTE_HOME:-$HOME/.acolyte}"
    DEVELOPMENT_MODE=0
fi

# Check if ACOLYTE is installed
if [ ! -d "$ACOLYTE_HOME" ]; then
    echo "Error: ACOLYTE not found at $ACOLYTE_HOME"
    echo ""
    echo "Please run the installation script first:"
    echo "  curl -sSL https://raw.githubusercontent.com/unmasSk/acolyte/main/install.sh | bash"
    echo ""
    echo "Or set ACOLYTE_DEV for development mode:"
    echo "  export ACOLYTE_DEV=/path/to/acolyte/project"
    exit 1
fi

# Check Python availability
if ! command -v python3 >/dev/null 2>&1; then
    echo "Error: python3 is not installed or not in PATH."
    echo "Please install Python 3.11 or newer."
    exit 1
fi

# Check Python version
PYTHON_VERSION=$(python3 -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')
REQUIRED_VERSION="3.11"

if [ "$(printf '%s\n' "$REQUIRED_VERSION" "$PYTHON_VERSION" | sort -V | head -n1)" != "$REQUIRED_VERSION" ]; then
    echo "Error: Python $PYTHON_VERSION found, but $REQUIRED_VERSION or newer is required."
    exit 1
fi

# Try to use installed entry point first (if ACOLYTE was installed via pip/poetry)
if [ $DEVELOPMENT_MODE -eq 0 ] && command -v acolyte >/dev/null 2>&1; then
    # Check if it's our acolyte (not this script itself)
    ACOLYTE_PATH=$(command -v acolyte)
    if [ "$ACOLYTE_PATH" != "$0" ] && [ "$ACOLYTE_PATH" != "$(readlink -f "$0")" ]; then
        # Use the installed version
        exec acolyte "$@"
    fi
fi

# Otherwise, run from source
export PYTHONPATH="$ACOLYTE_HOME/src:$PYTHONPATH"

# Check if CLI exists
if [ ! -f "$ACOLYTE_HOME/src/acolyte/cli.py" ]; then
    echo "Error: ACOLYTE CLI not found at $ACOLYTE_HOME/src/acolyte/cli.py"
    echo "Installation may be corrupted. Please reinstall."
    exit 1
fi

# Run ACOLYTE CLI
exec python3 "$ACOLYTE_HOME/src/acolyte/cli.py" "$@"
