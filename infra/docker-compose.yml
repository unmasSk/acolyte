version: "3.8"

services:
  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.24.1
    container_name: acolyte-weaviate
    restart: unless-stopped
    ports:
      - "${WEAVIATE_PORT:-42080}:8080"
      - "${WEAVIATE_GRPC_PORT:-50051}:50051"
    environment:
      - QUERY_DEFAULTS_LIMIT=25
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=none
      - ENABLE_MODULES=none
      - ENABLE_API_BASED_MODULES=true
      - CLUSTER_HOSTNAME=node1
      - LOG_LEVEL=warn
    volumes:
      - weaviate-data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - acolyte-network

  ollama:
    image: ollama/ollama:latest
    container_name: acolyte-ollama
    restart: unless-stopped
    ports:
      - "${OLLAMA_PORT:-42434}:11434"
    volumes:
      - ollama-models:/root/.ollama
      # GPU volumes will be added dynamically by installer if detected
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - GODEBUG=x509ignoreCN=0
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_CPU_LIMIT:-4}"
          memory: "${DOCKER_MEMORY_LIMIT:-16G}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - acolyte-network

volumes:
  weaviate-data:
    driver: local
  ollama-models:
    driver: local

  # Backend service (will be added during installation with proper paths)
  # backend:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   container_name: acolyte-backend
  #   restart: unless-stopped
  #   ports:
  #     - "${BACKEND_PORT:-42000}:8000"
  #   environment:
  #     - WEAVIATE_URL=http://weaviate:8080
  #     - OLLAMA_URL=http://ollama:11434
  #     - OLLAMA_MODEL=acolyte
  #     - PYTHONUNBUFFERED=1
  #   depends_on:
  #     - weaviate
  #     - ollama
  #   networks:
  #     - acolyte-network

networks:
  acolyte-network:
    driver: bridge
